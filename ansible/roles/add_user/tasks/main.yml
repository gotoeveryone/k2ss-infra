- name: 'Create group'
  group:
    name: '{{ group_name }}'
  when: ansible_ssh_user != user_name
- name: 'Create user'
  user:
    name: '{{ user_name }}'
    group: '{{ group_name }}'
    home: '{{ user_home }}'
    shell: /bin/bash
  when: ansible_ssh_user != user_name and user_password is not defined
- name: 'Create user with password'
  user:
    name: '{{ user_name }}'
    password: "{{ user_password | password_hash('sha512') }}"
    group: '{{ group_name }}'
    home: '{{ user_home }}'
    shell: /bin/bash
  when: ansible_ssh_user != user_name and user_password is defined
- name: 'Change permission'
  file:
    path: '{{ user_home }}'
    owner: '{{ user_name }}'
    group: '{{ group_name }}'
    mode: u=rwx,g=rx,o=rx
    state: directory
  when: ansible_ssh_user != user_name
- name: 'Add sudoers'
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '{{ user_name }}'
    line: '{{ user_name }} ALL=(ALL) ALL'
    validate: 'visudo -cf %s'
  when: ansible_ssh_user != user_name and not nopass
- name: 'Add sudoers with nopass'
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '{{ user_name }}'
    line: '{{ user_name }} ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'
  when: ansible_ssh_user != user_name and nopass
- name: 'Create ssh directory'
  file:
    path: '{{ user_home }}/.ssh'
    mode: 0700
    state: directory
  become_user: '{{ user_name }}'
  when: ansible_ssh_user != user_name
- name: 'Create authorized_keys file'
  file:
    path: '{{ user_home }}/.ssh/authorized_keys'
    mode: 0600
    state: touch
  become_user: '{{ user_name }}'
  when: ansible_ssh_user != user_name
- name: 'Transfer public key file'
  copy:
    src: '{{ public_key_path }}'
    dest: '{{ user_home }}/{{ user_name }}.pem'
  become_user: '{{ user_name }}'
  when: ansible_ssh_user != user_name and public_key_path is defined
- name: 'Add public key'
  shell: 'cat {{ user_home }}/{{ user_name }}.pem >> {{ user_home }}/.ssh/authorized_keys'
  become_user: '{{ user_name }}'
  when: ansible_ssh_user != user_name and public_key_path is defined
- name: 'Remove transfer public key file'
  file:
    path: '{{ user_home }}/{{ user_name }}.pem'
    state: absent
  become_user: '{{ user_name }}'
  when: ansible_ssh_user != user_name and public_key_path is defined

name: CI

on:
  pull_request:

jobs:
  ansible:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ansible
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: "3.11"
          cache: pipenv
          cache-dependency-path: |
            ansible/Pipfile.lock

      - name: Setup Pipenv
        run: pip install pipenv

      - name: Install Dependencies
        if: steps.setup-python-api.outputs.cache-hit != 'true'
        run: pipenv install -d

      - name: Execute Lint
        run: pipenv run lint

  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TF_VAR_domain: ${{ secrets.DOMAIN }}
      TF_VAR_dns_records: ${{ secrets.DNS_RECORDS }}
      TF_VAR_allow_ssh_ip: ${{ secrets.ALLOW_SSH_IP }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.11.0'
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Configure AWS Credentials
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_CI_ROLE_ARN }}
          aws-region: ap-northeast-1

      - name: Terraform Init
        if: ${{ github.actor != 'dependabot[bot]' }}
        run: terraform init

      - name: Terraform Validate
        if: ${{ github.actor != 'dependabot[bot]' }}
        run: terraform validate

      - name: Run tfsec with reviewdog output on the PR
        uses: reviewdog/action-tfsec@master
        with:
          tfsec_version: v1.28.1
          working_directory: terraform
          reporter: github-pr-review
          filter_mode: nofilter
          fail_on_error: true

      - name: Terraform Plan
        if: ${{ github.actor != 'dependabot[bot]' }}
        id: plan
        run: |
          mkdir ~/.ssh && touch ~/.ssh/k2ss.pub
          terraform plan -out workspace.plan

      - name: Post Plan
        if: ${{ always() && github.actor != 'dependabot[bot]' && github.ref != 'refs/heads/main' && (steps.plan.outcome == 'success' || steps.plan.outcome == 'failure') }}
        uses: GetTerminus/terraform-pr-commenter@v2
        env:
          EXPAND_SUMMARY_DETAILS: false
        with:
          terraform_version: '1.11.0'
          commenter_type: plan
          commenter_input: ${{ format('{0}{1}', steps.plan.outputs.stdout, steps.plan.outputs.stderr) }}
          commenter_exitcode: ${{ steps.plan.outputs.exitcode }}
